---
description: 'Project overview providing understanding of the repository'
globs:
alwaysApply: false
---

# Project Overview

## Project Purpose

- JavaScript/TypeScript library for deep equality comparison of values
- High-performance implementation focusing on correctness and edge case handling
- Supports various JavaScript data types including objects, arrays, Maps, Sets, RegExp, Date, etc.
- Handles circular references and specialized object types
- Designed for use in testing frameworks and general JavaScript applications

## Key Components

- `isEqual`: Main function that performs deep equality comparison
- Test suite with extensive test cases for different data types
- Benchmarks comparing performance against other deep-equal implementations

## Project Structure

- `src/`: Main source code and implementation
  - `is-equal.ts`: Core implementation of the deep equality function
  - `fixtures/`: Test fixtures and benchmark data
  - `*.test.ts`: Test suites
  - `*.benchmark.ts`: Performance benchmarking

## Usage

```typescript
import { isEqual } from '@ver0/deep-equal';

// Compare any two values for deep equality
const result = isEqual(objectA, objectB);
```

## Development Focus

- High performance deep comparison
- Correct handling of edge cases (NaN, circular references, etc.)
- TypeScript support with proper typing
- Benchmarking against similar libraries 